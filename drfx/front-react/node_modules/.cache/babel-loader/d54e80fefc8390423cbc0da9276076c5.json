{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\ZB-PC087\\\\Desktop\\\\REST-Django-Framwork\\\\drfx\\\\front-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\ZB-PC087\\\\Desktop\\\\REST-Django-Framwork\\\\drfx\\\\front-react\\\\src\\\\pages\\\\Posts.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { URL, Write } from 'pages';\nconst style = {\n  image: {\n    border: '1px solid #ccc',\n    background: '#fefefe'\n  }\n};\n\nclass Posts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: [],\n      editing: false\n    };\n\n    this.handle_change = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState(prevstate => {\n        const newState = _objectSpread({}, prevstate);\n\n        newState[name] = value;\n        return newState;\n      });\n    };\n\n    this.handleDelete = url => {\n      fetch(url, {\n        method: 'DELETE',\n        headers: {\n          Authorization: \"JWT \".concat(localStorage.getItem('token'))\n        }\n      }).then(() => {\n        this.postlist();\n      });\n    };\n\n    this.handleUpdate = id => {\n      this.setState({\n        editing: !this.state.editing\n      });\n      fetch(\"\".concat(URL.posts).concat(id, \"/\")).then(res => res.json()).then(json => {\n        this.setState({\n          id: id,\n          title: json.title,\n          content: json.content,\n          image: json.image\n        });\n      });\n    };\n\n    this.handleModify = id => {\n      this.setState({\n        editing: !this.state.editing\n      });\n      fetch(\"\".concat(URL.posts).concat(id, \"/\"), {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: \"JWT \".concat(localStorage.getItem('token'))\n        },\n        body: JSON.stringify({\n          \"title\": this.state.title,\n          \"content\": this.state.content //\"image\" : this.state.image\n\n        })\n      }).then(() => {\n        this.postlist();\n      }); // console.log(`${URL.posts}${id}/`)\n      // window.location.reload();\n    };\n\n    this.handle_write = (e, data) => {\n      e.preventDefault();\n      var form_data = new FormData();\n      form_data.append('image', data.image);\n      form_data.append('title', data.title);\n      form_data.append('content', data.content);\n      fetch(URL.posts, {\n        method: 'POST',\n        headers: {\n          Accept: '*/*',\n          Authorization: \"JWT \".concat(localStorage.getItem('token'))\n        },\n        body: form_data\n      }).then(res => {\n        res.json();\n      }).then(json => {\n        this.setState({\n          logged_in: true,\n          displayed_form: ''\n        });\n      }).then(() => {\n        this.postlist();\n      });\n    };\n  }\n\n  async postlist() {\n    try {\n      const res = await fetch(URL.posts);\n      const posts = await res.json();\n      this.setState({\n        posts\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      const res = await fetch(URL.posts);\n      const posts = await res.json();\n      this.setState({\n        posts\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Write, {\n      handle_write: this.handle_write,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, this.state.editing ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"\\uC218\\uC815\\uC911\"), React.createElement(\"form\", {\n      onSubmit: () => {\n        this.handleModify(this.state.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"title\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      value: this.state.title,\n      onChange: this.handle_change,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"content\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"content\",\n      value: this.state.content,\n      onChange: this.handle_change,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"\\uC6D0\\uB798\\uC791\\uC5C5\"), this.state.posts.map(item => React.createElement(\"div\", {\n      key: item.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"\\uC81C\\uBAA9 : \", item.title), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"\\uB0B4\\uC6A9 : \", item.content), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"\\uC791\\uC131\\uC790 : \", item.owner), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"\\uC0DD\\uC131\\uC77C : \", item.created_at), React.createElement(\"img\", {\n      src: item.image,\n      alt: \"No img\",\n      height: 240,\n      width: 240,\n      style: style.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => {\n        this.handleDelete(item.url);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"\\uC0AD\\uC81C\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.handleUpdate(item.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"\\uC218\\uC815\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Home\")))));\n  }\n\n}\n\nexport default Posts;","map":{"version":3,"sources":["C:\\Users\\ZB-PC087\\Desktop\\REST-Django-Framwork\\drfx\\front-react\\src\\pages\\Posts.js"],"names":["React","Component","Link","URL","Write","style","image","border","background","Posts","state","posts","editing","handle_change","e","name","target","value","setState","prevstate","newState","handleDelete","url","fetch","method","headers","Authorization","localStorage","getItem","then","postlist","handleUpdate","id","res","json","title","content","handleModify","body","JSON","stringify","handle_write","data","preventDefault","form_data","FormData","append","Accept","logged_in","displayed_form","console","log","componentDidMount","render","props","map","item","owner","created_at"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { URL, Write } from 'pages';\r\nconst style = {\r\n    image: {\r\n        border: '1px solid #ccc',\r\n        background: '#fefefe',\r\n    },\r\n};\r\nclass Posts extends Component {\r\n    state = {\r\n        posts: [],\r\n        editing : false\r\n    };\r\n\r\n    handle_change = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n          const newState = { ...prevstate };\r\n          newState[name] = value;\r\n          return newState;\r\n        });\r\n      };\r\n\r\n    handleDelete = url => {\r\n        fetch(url, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                Authorization: `JWT ${localStorage.getItem('token')}`\r\n            }\r\n        }).then(() => {\r\n            this.postlist()\r\n        })\r\n    }\r\n    async postlist() {\r\n        try {\r\n            const res = await fetch(URL.posts);\r\n            const posts = await res.json();\r\n            this.setState({\r\n                posts\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    handleUpdate = (id) => {\r\n        this.setState({\r\n            editing : !this.state.editing\r\n        })\r\n        fetch(`${URL.posts}${id}/`)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            this.setState({\r\n                id : id,\r\n                title : json.title,\r\n                content : json.content,\r\n                image : json.image,\r\n                \r\n            })\r\n        })\r\n        \r\n    }\r\n\r\n    handleModify = (id) => {\r\n        this.setState({\r\n            editing : !this.state.editing\r\n        })\r\n        fetch(`${URL.posts}${id}/`,{\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type' : 'application/json',\r\n                Authorization: `JWT ${localStorage.getItem('token')}`\r\n            },\r\n            body: JSON.stringify({\r\n                \"title\" : this.state.title,\r\n                \"content\" : this.state.content,\r\n                //\"image\" : this.state.image\r\n            })\r\n        }).then(() =>{\r\n            this.postlist()\r\n        })\r\n        // console.log(`${URL.posts}${id}/`)\r\n        // window.location.reload();\r\n        \r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const res = await fetch(URL.posts);\r\n            const posts = await res.json();\r\n            this.setState({\r\n                posts\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n    handle_write = (e, data) => {\r\n        e.preventDefault();\r\n        var form_data = new FormData();\r\n\r\n        form_data.append('image', data.image);\r\n        form_data.append('title', data.title);\r\n        form_data.append('content', data.content);      \r\n\r\n        fetch(URL.posts, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept : '*/*',\r\n                Authorization: `JWT ${localStorage.getItem('token')}`\r\n            },\r\n            body: form_data\r\n            \r\n        })\r\n            .then(res => {\r\n                res.json()\r\n            })\r\n            .then(json => {\r\n                this.setState({\r\n                    logged_in: true,\r\n                    displayed_form: '',\r\n                });\r\n            }).then(()=>{\r\n                this.postlist()\r\n            })\r\n    }\r\n    render(props) {\r\n        \r\n        \r\n        return (\r\n            <div>\r\n                <Write handle_write={this.handle_write} />\r\n                <div>\r\n                {this.state.editing\r\n                    ? (\r\n                        <div>\r\n                            <h5>수정중</h5>\r\n                            <form onSubmit={() => {this.handleModify(this.state.id)}}>\r\n                                <label htmlFor=\"title\">title</label>\r\n                                <input\r\n                                type=\"text\"\r\n                                name=\"title\"\r\n                                value={this.state.title}\r\n                                onChange={this.handle_change}\r\n                                />\r\n                                <label htmlFor=\"content\">content</label>\r\n                                <input\r\n                                type=\"text\"\r\n                                name=\"content\"\r\n                                value={this.state.content}\r\n                                onChange={this.handle_change}\r\n                                />\r\n                                <input type=\"submit\" />\r\n                            </form>\r\n                        </div>\r\n                        )\r\n                    : (\r\n                        <div>\r\n                            <h5>원래작업</h5>        \r\n                            {this.state.posts.map(item =>\r\n                                (\r\n                                    <div key={item.url}>\r\n                                        <h4>제목 : {item.title}</h4>\r\n                                        <p>내용 : {item.content}</p>\r\n                                        <p>작성자 : {item.owner}</p>\r\n                                        <p>생성일 : {item.created_at}</p>\r\n                                        <img\r\n                                         src={item.image}\r\n                                         alt='No img'\r\n                                         height={240}\r\n                                         width={240}\r\n                                         style={style.image\r\n                                        }\r\n                                        /><br />\r\n                           \r\n                                        <button onClick={() => {this.handleDelete(item.url)}}>삭제</button>\r\n                                        <button onClick={() => {this.handleUpdate(item.id)}}>수정</button>\r\n                                        <br /><br />\r\n                                    </div>\r\n                                )\r\n                            )\r\n                }           \r\n                <p><Link to='/'>Home</Link></p>\r\n                        </div>\r\n                        )\r\n                }\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Posts;"]},"metadata":{},"sourceType":"module"}
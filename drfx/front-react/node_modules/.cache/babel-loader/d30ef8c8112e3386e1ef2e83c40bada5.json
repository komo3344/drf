{"ast":null,"code":"'use strict';\n\nconst mimicFn = require('mimic-fn');\n\nconst isPromise = require('p-is-promise');\n\nconst mapAgeCleaner = require('map-age-cleaner');\n\nconst cacheStore = new WeakMap();\n\nconst defaultCacheKey = (...arguments_) => {\n  if (arguments_.length === 0) {\n    return '__defaultKey';\n  }\n\n  if (arguments_.length === 1) {\n    const firstArgument = arguments_[0];\n\n    if (firstArgument === null || firstArgument === undefined || typeof firstArgument !== 'function' && typeof firstArgument !== 'object') {\n      return firstArgument;\n    }\n  }\n\n  return JSON.stringify(arguments_);\n};\n\nconst mem = (fn, options) => {\n  options = Object.assign({\n    cacheKey: defaultCacheKey,\n    cache: new Map(),\n    cachePromiseRejection: false\n  }, options);\n\n  if (typeof options.maxAge === 'number') {\n    mapAgeCleaner(options.cache);\n  }\n\n  const _options = options,\n        cache = _options.cache;\n  options.maxAge = options.maxAge || 0;\n\n  const setData = (key, data) => {\n    cache.set(key, {\n      data,\n      maxAge: Date.now() + options.maxAge\n    });\n  };\n\n  const memoized = function (...arguments_) {\n    const key = options.cacheKey(...arguments_);\n\n    if (cache.has(key)) {\n      return cache.get(key).data;\n    }\n\n    const cacheItem = fn.call(this, ...arguments_);\n    setData(key, cacheItem);\n\n    if (isPromise(cacheItem) && options.cachePromiseRejection === false) {\n      // Remove rejected promises from cache unless `cachePromiseRejection` is set to `true`\n      cacheItem.catch(() => cache.delete(key));\n    }\n\n    return cacheItem;\n  };\n\n  try {\n    // The below call will throw in some host environments\n    // See https://github.com/sindresorhus/mimic-fn/issues/10\n    mimicFn(memoized, fn);\n  } catch (_) {}\n\n  cacheStore.set(memoized, options.cache);\n  return memoized;\n};\n\nmodule.exports = mem; // TODO: Remove this for the next major release\n\nmodule.exports.default = mem;\n\nmodule.exports.clear = fn => {\n  const cache = cacheStore.get(fn);\n\n  if (cache && typeof cache.clear === 'function') {\n    cache.clear();\n  }\n};","map":null,"metadata":{},"sourceType":"script"}
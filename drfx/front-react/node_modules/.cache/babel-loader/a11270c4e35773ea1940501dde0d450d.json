{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\ZB-PC087\\\\Desktop\\\\REST-Django-Framwork\\\\drfx\\\\front-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\ZB-PC087\\\\Desktop\\\\REST-Django-Framwork\\\\drfx\\\\front-react\\\\src\\\\pages\\\\Write.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass Write extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.handle_change = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState(prevstate => {\n        const newState = _objectSpread({}, prevstate);\n\n        newState[name] = value;\n        return newState;\n      });\n    };\n\n    this.getInitialState = () => {\n      return {\n        file: []\n      };\n    };\n\n    this._onChange = () => {\n      // Assuming only image\n      var file = this.refs.file.files[0];\n      var reader = new FileReader();\n      var url = reader.readAsDataURL(file);\n\n      reader.onloadend = function (e) {\n        this.setState({\n          imgSrc: reader.result\n        });\n      }.bind(this);\n\n      console.log(url); // Would see a path?\n\n      console.log(file);\n      console.log(reader); // TODO: concat files\n    };\n  }\n\n  _fileUploadHandler(e) {\n    const formData = new FormData(); //form의 현재 key/value 들로 채워짐\n\n    formData.append('file', e.target.files[0]);\n    fetch(URL.login, {\n      method: 'POST',\n      headers: {\n        Authorization: \"JWT \".concat(localStorage.getItem('token'))\n      },\n      body: formData\n    }).then(response => {\n      console.log(response);\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"\\uAC8C\\uC2DC\\uBB3C\\uC791\\uC131 \"), React.createElement(\"form\", {\n      onSubmit: e => this.props.handle_write(e, this.state),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"title\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      onChange: this.handle_change,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"content\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"content\",\n      onChange: this.handle_change,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      ref: \"file\",\n      type: \"file\",\n      name: \"user[image]\",\n      multiple: true // input 요소에 값을 두 개 이상 입력하는 것을 허용\n      ,\n      onChange: this._onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"\\uC774\\uBBF8\\uC9C0 \\uBBF8\\uB9AC\\uBCF4\\uAE30\"), React.createElement(\"img\", {\n      src: this.state.imgSrc,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Home\"))));\n  }\n\n}\n\nexport default Write;\nWrite.propTypes = {\n  handle_write: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["C:\\Users\\ZB-PC087\\Desktop\\REST-Django-Framwork\\drfx\\front-react\\src\\pages\\Write.js"],"names":["React","Link","PropTypes","Write","Component","state","handle_change","e","name","target","value","setState","prevstate","newState","getInitialState","file","_onChange","refs","files","reader","FileReader","url","readAsDataURL","onloadend","imgSrc","result","bind","console","log","_fileUploadHandler","formData","FormData","append","fetch","URL","login","method","headers","Authorization","localStorage","getItem","body","then","response","catch","err","render","props","handle_write","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Write extends React.Component {\r\n  state = {};\r\n\r\n  handle_change = e => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState(prevstate => {\r\n      const newState = { ...prevstate };\r\n      newState[name] = value;\r\n      return newState;\r\n    });\r\n  };\r\n  getInitialState = ()=>{\r\n    return{file: []}\r\n  };\r\n  _onChange = ()=>{\r\n    // Assuming only image\r\n    var file = this.refs.file.files[0];\r\n    var reader = new FileReader();\r\n    var url = reader.readAsDataURL(file);\r\n  \r\n     reader.onloadend = function (e) {\r\n        this.setState({\r\n            imgSrc: reader.result\r\n        })\r\n      }.bind(this);\r\n\r\n      console.log(url); // Would see a path?\r\n      console.log(file);\r\n      console.log(reader);\r\n    // TODO: concat files\r\n  };\r\n  _fileUploadHandler(e) {\r\n    \r\n    const formData = new FormData(); //form의 현재 key/value 들로 채워짐\r\n    formData.append('file', e.target.files[0]);\r\n    fetch(URL.login, {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `JWT ${localStorage.getItem('token')}`\r\n      },\r\n      body: formData\r\n  })\r\n    .then(response => {\r\n    console.log(response)\r\n    })\r\n    .catch(err => console.log(err))\r\n    }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <h3>게시물작성 </h3>\r\n          <form onSubmit={e => this.props.handle_write(e, this.state)}>\r\n            <label htmlFor=\"title\">title</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              onChange={this.handle_change}\r\n            />\r\n            <label htmlFor=\"content\">content</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"content\"\r\n              onChange={this.handle_change}\r\n            /><br />\r\n            <input \r\n              ref=\"file\" \r\n              type=\"file\" \r\n              name=\"user[image]\" \r\n              multiple={true} // input 요소에 값을 두 개 이상 입력하는 것을 허용\r\n              onChange={this._onChange}/><br />\r\n              <h3>이미지 미리보기</h3>\r\n              <img src={this.state.imgSrc} alt='' /><br />    \r\n            <input type=\"submit\" />\r\n          </form>\r\n          \r\n        </div>\r\n        <div>\r\n          \r\n          <p><Link to='/'>Home</Link></p>\r\n        </div>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default Write;\r\n\r\nWrite.propTypes = {\r\n  handle_write: PropTypes.func.isRequired\r\n};"]},"metadata":{},"sourceType":"module"}
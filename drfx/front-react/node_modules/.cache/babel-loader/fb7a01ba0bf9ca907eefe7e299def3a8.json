{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ZB-PC087\\\\Desktop\\\\REST-Django-Framwork\\\\drfx\\\\front-react\\\\src\\\\shared\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { URL, Posts, Users, Nav, SignupForm, LoginForm, Write } from 'pages';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handle_login = (e, data) => {\n      e.preventDefault();\n      fetch(URL.login, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(res => res.json()).then(json => {\n        localStorage.setItem('token', json.token);\n        localStorage.setItem('id', json.user.id);\n        this.setState({\n          logged_in: true,\n          displayed_form: '',\n          username: json.user.username\n        });\n      });\n    };\n\n    this.handle_write = (e, data) => {\n      e.preventDefault();\n      const formData = new FormData(); //form의 현재 key/value 들로 채워짐\n\n      formData.append('title', data.title);\n      formData.append('content', data.content);\n      formData.append('image', data.filePath); //file path\n\n      fetch(URL.posts, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: \"JWT \".concat(localStorage.getItem('token'))\n        },\n        body: formData\n      }).then(res => {\n        res.json();\n      }).then(json => {\n        this.setState({\n          logged_in: true,\n          displayed_form: ''\n        });\n      }); //window.location.reload();\n\n      console.log(data);\n      console.log(data.title);\n      console.log(data.content); //console.log(file);\n    };\n\n    this.handle_signup = (e, data) => {\n      e.preventDefault();\n      fetch(URL.signup, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': document.querySelector('meta[name=\"csrf-token\"]')\n        },\n        body: JSON.stringify(data)\n      }).then(res => res.json()).then(json => {\n        localStorage.setItem('token', json.token);\n        this.setState({\n          logged_in: true,\n          displayed_form: '',\n          username: data.username\n        });\n      });\n    };\n\n    this.handle_logout = () => {\n      localStorage.removeItem('token');\n      this.setState({\n        logged_in: false,\n        username: ''\n      });\n    };\n\n    this.display_form = form => {\n      this.setState({\n        displayed_form: form\n      });\n    };\n\n    this.state = {\n      displayed_form: '',\n      logged_in: localStorage.getItem('token') ? true : false,\n      username: '',\n      file: ''\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.logged_in) {\n      fetch(\"\".concat(URL.userlist).concat(localStorage.getItem('id'), \"/\"), {\n        headers: {\n          Authorization: \"JWT \".concat(localStorage.getItem('token'))\n        }\n      }).then(res => res.json()).then(json => {\n        this.setState({\n          username: json.username\n        });\n      });\n    }\n  }\n\n  /////////////////////////////////////\n  _fileUploadHandler(e) {\n    const formData = new FormData(); //form의 현재 key/value 들로 채워짐\n\n    formData.append('file', e.target.files[0]);\n    fetch(URL.login, {\n      method: 'POST',\n      headers: {\n        Authorization: \"JWT \".concat(localStorage.getItem('token'))\n      },\n      body: formData\n    }).then(response => {\n      console.log(response);\n    }).catch(err => console.log(err));\n  } /////////////////////////////////////\n\n\n  _handleImageChange(e) {\n    e.preventDefault();\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    reader.onloadend = () => {\n      this.setState({\n        file: file\n      });\n    };\n\n    reader.readAsDataURL(file);\n  } ////////////////////////////////////\n\n\n  render() {\n    let form;\n\n    switch (this.state.displayed_form) {\n      case 'login':\n        form = React.createElement(LoginForm, {\n          handle_login: this.handle_login,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        });\n        break;\n\n      case 'signup':\n        form = React.createElement(SignupForm, {\n          handle_signup: this.handle_signup,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        });\n        break;\n\n      case 'write':\n        form = React.createElement(Write, {\n          handle_write: this.handle_write,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        });\n        break;\n\n      default:\n        form = null;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      logged_in: this.state.logged_in,\n      display_form: this.display_form,\n      handle_logout: this.handle_logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), form, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, this.state.logged_in ? \"Hello, \".concat(this.state.username) : 'Please Log In'), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/users\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"User List\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/posts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"posts List\")), React.createElement(Route, {\n      path: \"/posts\",\n      component: Posts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/users\",\n      component: Users,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\ZB-PC087\\Desktop\\REST-Django-Framwork\\drfx\\front-react\\src\\shared\\App.js"],"names":["React","Component","Route","Link","URL","Posts","Users","Nav","SignupForm","LoginForm","Write","App","constructor","props","handle_login","e","data","preventDefault","fetch","login","method","headers","body","JSON","stringify","then","res","json","localStorage","setItem","token","user","id","setState","logged_in","displayed_form","username","handle_write","formData","FormData","append","title","content","filePath","posts","Authorization","getItem","console","log","handle_signup","signup","document","querySelector","handle_logout","removeItem","display_form","form","state","file","componentDidMount","userlist","_fileUploadHandler","target","files","response","catch","err","_handleImageChange","reader","FileReader","onloadend","readAsDataURL","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport { URL, Posts, Users, Nav, SignupForm, LoginForm, Write } from 'pages';\r\n\r\n\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            displayed_form: '',\r\n            logged_in: localStorage.getItem('token') ? true : false,\r\n            username: '',\r\n            file: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.logged_in) {\r\n            fetch(`${URL.userlist}${localStorage.getItem('id')}/`, {\r\n                headers: {\r\n                    Authorization: `JWT ${localStorage.getItem('token')}`\r\n                }\r\n            })\r\n                .then(res => res.json())\r\n                .then(json => {\r\n                    this.setState({ username: json.username });\r\n                });\r\n        }\r\n    }\r\n    handle_login = (e, data) => {\r\n        e.preventDefault();\r\n        fetch(URL.login, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                localStorage.setItem('token', json.token);\r\n                localStorage.setItem('id', json.user.id);\r\n                this.setState({\r\n                    logged_in: true,\r\n                    displayed_form: '',\r\n                    username: json.user.username\r\n                });\r\n            });\r\n    };\r\n    /////////////////////////////////////\r\n    _fileUploadHandler(e) {\r\n    \r\n        const formData = new FormData(); //form의 현재 key/value 들로 채워짐\r\n        formData.append('file', e.target.files[0]);\r\n        fetch(URL.login, {\r\n          method: 'POST',\r\n          headers: {\r\n            Authorization: `JWT ${localStorage.getItem('token')}`\r\n          },\r\n          body: formData\r\n      })\r\n        .then(response => {\r\n        console.log(response)\r\n        })\r\n        .catch(err => console.log(err))\r\n        }\r\n        /////////////////////////////////////\r\n        _handleImageChange(e) {\r\n            e.preventDefault();\r\n        \r\n            let reader = new FileReader();\r\n            let file = e.target.files[0];\r\n        \r\n            reader.onloadend = () => {\r\n              this.setState({\r\n                file: file,\r\n              });\r\n            }\r\n        \r\n            reader.readAsDataURL(file)\r\n          }\r\n          ////////////////////////////////////\r\n    handle_write = (e, data) => {\r\n\r\n        e.preventDefault();\r\n        const formData = new FormData(); //form의 현재 key/value 들로 채워짐\r\n        formData.append('title', data.title);\r\n        formData.append('content', data.content);\r\n        formData.append('image', data.filePath); //file path\r\n\r\n        fetch(URL.posts, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `JWT ${localStorage.getItem('token')}`\r\n            },\r\n            body: formData\r\n        })\r\n            .then(res => {\r\n                res.json()\r\n            })\r\n            .then(json => {\r\n                this.setState({\r\n                    logged_in: true,\r\n                    displayed_form: '',\r\n                });\r\n            });\r\n            //window.location.reload();\r\n            console.log(data);\r\n            console.log(data.title);\r\n            console.log(data.content);\r\n            //console.log(file);\r\n    };\r\n\r\n    handle_signup = (e, data) => {\r\n        e.preventDefault();\r\n        fetch(URL.signup, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'X-CSRFToken' : document.querySelector('meta[name=\"csrf-token\"]')\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                localStorage.setItem('token', json.token);\r\n                this.setState({\r\n                    logged_in: true,\r\n                    displayed_form: '',\r\n                    username: data.username\r\n                });\r\n            });\r\n    };\r\n\r\n    handle_logout = () => {\r\n        localStorage.removeItem('token');\r\n        this.setState({ logged_in: false, username: '' });\r\n    };\r\n\r\n    display_form = form => {\r\n        this.setState({\r\n            displayed_form: form\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let form;\r\n        switch (this.state.displayed_form) {\r\n            case 'login':\r\n                form = <LoginForm handle_login={this.handle_login} />;\r\n                break;\r\n            case 'signup':\r\n                form = <SignupForm handle_signup={this.handle_signup} />;\r\n                break;\r\n            case 'write':\r\n                form = <Write handle_write={this.handle_write} />\r\n                break;\r\n            default:\r\n                form = null;\r\n        }\r\n        return (\r\n            <div>\r\n                <Nav\r\n                    logged_in={this.state.logged_in}\r\n                    display_form={this.display_form}\r\n                    handle_logout={this.handle_logout}\r\n                />\r\n                {form}\r\n                <h3>\r\n                    {this.state.logged_in\r\n                        ? `Hello, ${this.state.username}`\r\n                        : 'Please Log In'\r\n                    }\r\n                </h3>\r\n                <p><Link to='/users'>User List</Link></p>\r\n                <p><Link to='/posts'>posts List</Link></p>\r\n                <Route path=\"/posts\" component={Posts} />\r\n                <Route path=\"/users\" component={Users} />\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\nexport default App;\r\n\r\n"]},"metadata":{},"sourceType":"module"}
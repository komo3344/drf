{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ZB-PC087\\\\Desktop\\\\REST-Django-Framwork\\\\drfx\\\\front-react\\\\src\\\\shared\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Home, About, Posts, Signup, Users } from 'pages';\n\nclass App extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/about/:name\",\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/about\",\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/posts\",\n      component: Posts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signup\",\n      component: Signup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/users\",\n      component: Users,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }));\n  }\n\n}\n/*\r\nclass App extends Component {\r\n   constructor(props) {\r\n     super(props);\r\n     this.state = {\r\n       displayed_form: '',\r\n       logged_in: localStorage.getItem('token') ? true : false,\r\n       username: ''\r\n     };\r\n   }\r\n \r\n   componentDidMount() {\r\n     if (this.state.logged_in) {\r\n       fetch('http://localhost:8000/api/v1/users/current_user/', {\r\n         headers: {\r\n           Authorization: `JWT ${localStorage.getItem('token')}`\r\n         }\r\n       })\r\n         .then(res => res.json())\r\n         .then(json => {\r\n           this.setState({ username: json.username });\r\n         });\r\n     }\r\n   }\r\n \r\n   handle_login = (e, data) => {\r\n     e.preventDefault();\r\n     fetch('http://localhost:8000/api/v1/token-auth/', {\r\n       method: 'POST',\r\n       headers: {\r\n         'Content-Type': 'application/json'\r\n       },\r\n       body: JSON.stringify(data)\r\n     })\r\n       .then(res => res.json())\r\n       .then(json => {\r\n         localStorage.setItem('token', json.token);\r\n         this.setState({\r\n           logged_in: true,\r\n           displayed_form: '',\r\n           username: json.user.username\r\n         });\r\n       });\r\n   };\r\n \r\n   handle_signup = (e, data) => {\r\n     e.preventDefault();\r\n     fetch('http://localhost:8000/api/v1/users/', {\r\n       method: 'POST',\r\n       headers: {\r\n         'Content-Type': 'application/json'\r\n       },\r\n       body: JSON.stringify(data)\r\n     })\r\n       .then(res => res.json())\r\n       .then(json => {\r\n         localStorage.setItem('token', json.token);\r\n         this.setState({\r\n           logged_in: true,\r\n           displayed_form: '',\r\n           username: json.username\r\n         });\r\n       });\r\n   };\r\n \r\n   handle_logout = () => {\r\n     localStorage.removeItem('token');\r\n     this.setState({ logged_in: false, username: '' });\r\n   };\r\n \r\n   display_form = form => {\r\n     this.setState({\r\n       displayed_form: form\r\n     });\r\n   };\r\n \r\n   render() {\r\n     let form;\r\n     switch (this.state.displayed_form) {\r\n       case 'login':\r\n         form = <LoginForm handle_login={this.handle_login} />;\r\n         break;\r\n       case 'signup':\r\n         form = <SignupForm handle_signup={this.handle_signup} />;\r\n         break;\r\n       default:\r\n         form = null;\r\n     }\r\n \r\n     return (\r\n       <div className=\"App\">\r\n         <Nav\r\n           logged_in={this.state.logged_in}\r\n           display_form={this.display_form}\r\n           handle_logout={this.handle_logout}\r\n         />\r\n         {form}\r\n         <h3>\r\n           {this.state.logged_in\r\n             ? `Hello, ${this.state.username}`\r\n             : 'Please Log In'}\r\n         </h3>\r\n       </div>\r\n     );\r\n   }\r\n }\r\n */\n\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\ZB-PC087\\Desktop\\REST-Django-Framwork\\drfx\\front-react\\src\\shared\\App.js"],"names":["React","Component","Route","Switch","Home","About","Posts","Signup","Users","App","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,KAAtB,EAA6BC,MAA7B,EAAqCC,KAArC,QAAkD,OAAlD;;AAIA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AACxBS,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEN,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,cAAZ;AAA2B,MAAA,SAAS,EAAEC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAEA,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFJ,EAMI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAEC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAOI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,SAAS,EAAEC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,EAQI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAEC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CADJ;AAYH;;AAduB;AAe3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2GC,eAAeC,GAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { Home, About, Posts, Signup, Users } from 'pages';\r\n\r\n\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Route exact path=\"/\" component={Home}/>\r\n                <Switch>\r\n                    <Route path=\"/about/:name\" component={About}/>\r\n                    <Route path=\"/about\" component={About}/>\r\n                </Switch>\r\n                <Route path=\"/posts\" component={Posts}/>\r\n                <Route path=\"/signup\" component={Signup}/>\r\n                <Route path=\"/users\" component={Users}/>\r\n            </div>\r\n        );\r\n    }\r\n}/*\r\nclass App extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        displayed_form: '',\r\n        logged_in: localStorage.getItem('token') ? true : false,\r\n        username: ''\r\n      };\r\n    }\r\n  \r\n    componentDidMount() {\r\n      if (this.state.logged_in) {\r\n        fetch('http://localhost:8000/api/v1/users/current_user/', {\r\n          headers: {\r\n            Authorization: `JWT ${localStorage.getItem('token')}`\r\n          }\r\n        })\r\n          .then(res => res.json())\r\n          .then(json => {\r\n            this.setState({ username: json.username });\r\n          });\r\n      }\r\n    }\r\n  \r\n    handle_login = (e, data) => {\r\n      e.preventDefault();\r\n      fetch('http://localhost:8000/api/v1/token-auth/', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n      })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n          localStorage.setItem('token', json.token);\r\n          this.setState({\r\n            logged_in: true,\r\n            displayed_form: '',\r\n            username: json.user.username\r\n          });\r\n        });\r\n    };\r\n  \r\n    handle_signup = (e, data) => {\r\n      e.preventDefault();\r\n      fetch('http://localhost:8000/api/v1/users/', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n      })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n          localStorage.setItem('token', json.token);\r\n          this.setState({\r\n            logged_in: true,\r\n            displayed_form: '',\r\n            username: json.username\r\n          });\r\n        });\r\n    };\r\n  \r\n    handle_logout = () => {\r\n      localStorage.removeItem('token');\r\n      this.setState({ logged_in: false, username: '' });\r\n    };\r\n  \r\n    display_form = form => {\r\n      this.setState({\r\n        displayed_form: form\r\n      });\r\n    };\r\n  \r\n    render() {\r\n      let form;\r\n      switch (this.state.displayed_form) {\r\n        case 'login':\r\n          form = <LoginForm handle_login={this.handle_login} />;\r\n          break;\r\n        case 'signup':\r\n          form = <SignupForm handle_signup={this.handle_signup} />;\r\n          break;\r\n        default:\r\n          form = null;\r\n      }\r\n  \r\n      return (\r\n        <div className=\"App\">\r\n          <Nav\r\n            logged_in={this.state.logged_in}\r\n            display_form={this.display_form}\r\n            handle_logout={this.handle_logout}\r\n          />\r\n          {form}\r\n          <h3>\r\n            {this.state.logged_in\r\n              ? `Hello, ${this.state.username}`\r\n              : 'Please Log In'}\r\n          </h3>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  */\r\n  export default App;\r\n\r\n"]},"metadata":{},"sourceType":"module"}